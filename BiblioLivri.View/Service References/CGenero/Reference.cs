//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiblioLivri.View.CGenero {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBGenero", Namespace="http://schemas.datacontract.org/2004/07/BiblioLivri.Model")]
    [System.SerializableAttribute()]
    public partial class TBGenero : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeDescricaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_generoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeDescricao {
            get {
                return this.GeDescricaoField;
            }
            set {
                if ((object.ReferenceEquals(this.GeDescricaoField, value) != true)) {
                    this.GeDescricaoField = value;
                    this.RaisePropertyChanged("GeDescricao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_genero {
            get {
                return this.id_generoField;
            }
            set {
                if ((this.id_generoField.Equals(value) != true)) {
                    this.id_generoField = value;
                    this.RaisePropertyChanged("id_genero");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CGenero.ICGenero")]
    public interface ICGenero {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Incluir", ReplyAction="http://tempuri.org/ICGenero/IncluirResponse")]
        void Incluir(BiblioLivri.View.CGenero.TBGenero oGenero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Incluir", ReplyAction="http://tempuri.org/ICGenero/IncluirResponse")]
        System.Threading.Tasks.Task IncluirAsync(BiblioLivri.View.CGenero.TBGenero oGenero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Alterar", ReplyAction="http://tempuri.org/ICGenero/AlterarResponse")]
        void Alterar(BiblioLivri.View.CGenero.TBGenero oGenero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Alterar", ReplyAction="http://tempuri.org/ICGenero/AlterarResponse")]
        System.Threading.Tasks.Task AlterarAsync(BiblioLivri.View.CGenero.TBGenero oGenero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Excluir", ReplyAction="http://tempuri.org/ICGenero/ExcluirResponse")]
        void Excluir(BiblioLivri.View.CGenero.TBGenero oGenero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Excluir", ReplyAction="http://tempuri.org/ICGenero/ExcluirResponse")]
        System.Threading.Tasks.Task ExcluirAsync(BiblioLivri.View.CGenero.TBGenero oGenero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/SelecionaPK", ReplyAction="http://tempuri.org/ICGenero/SelecionaPKResponse")]
        BiblioLivri.View.CGenero.TBGenero SelecionaPK(int codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/SelecionaPK", ReplyAction="http://tempuri.org/ICGenero/SelecionaPKResponse")]
        System.Threading.Tasks.Task<BiblioLivri.View.CGenero.TBGenero> SelecionaPKAsync(int codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/SelecionaTodos", ReplyAction="http://tempuri.org/ICGenero/SelecionaTodosResponse")]
        BiblioLivri.View.CGenero.TBGenero[] SelecionaTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/SelecionaTodos", ReplyAction="http://tempuri.org/ICGenero/SelecionaTodosResponse")]
        System.Threading.Tasks.Task<BiblioLivri.View.CGenero.TBGenero[]> SelecionaTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICGeneroChannel : BiblioLivri.View.CGenero.ICGenero, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CGeneroClient : System.ServiceModel.ClientBase<BiblioLivri.View.CGenero.ICGenero>, BiblioLivri.View.CGenero.ICGenero {
        
        public CGeneroClient() {
        }
        
        public CGeneroClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CGeneroClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CGeneroClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CGeneroClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Incluir(BiblioLivri.View.CGenero.TBGenero oGenero) {
            base.Channel.Incluir(oGenero);
        }
        
        public System.Threading.Tasks.Task IncluirAsync(BiblioLivri.View.CGenero.TBGenero oGenero) {
            return base.Channel.IncluirAsync(oGenero);
        }
        
        public void Alterar(BiblioLivri.View.CGenero.TBGenero oGenero) {
            base.Channel.Alterar(oGenero);
        }
        
        public System.Threading.Tasks.Task AlterarAsync(BiblioLivri.View.CGenero.TBGenero oGenero) {
            return base.Channel.AlterarAsync(oGenero);
        }
        
        public void Excluir(BiblioLivri.View.CGenero.TBGenero oGenero) {
            base.Channel.Excluir(oGenero);
        }
        
        public System.Threading.Tasks.Task ExcluirAsync(BiblioLivri.View.CGenero.TBGenero oGenero) {
            return base.Channel.ExcluirAsync(oGenero);
        }
        
        public BiblioLivri.View.CGenero.TBGenero SelecionaPK(int codigo) {
            return base.Channel.SelecionaPK(codigo);
        }
        
        public System.Threading.Tasks.Task<BiblioLivri.View.CGenero.TBGenero> SelecionaPKAsync(int codigo) {
            return base.Channel.SelecionaPKAsync(codigo);
        }
        
        public BiblioLivri.View.CGenero.TBGenero[] SelecionaTodos() {
            return base.Channel.SelecionaTodos();
        }
        
        public System.Threading.Tasks.Task<BiblioLivri.View.CGenero.TBGenero[]> SelecionaTodosAsync() {
            return base.Channel.SelecionaTodosAsync();
        }
    }
}
