//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiblioLivri.View.CAutor {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBAutor", Namespace="http://schemas.datacontract.org/2004/07/BiblioLivri.Model")]
    [System.SerializableAttribute()]
    public partial class TBAutor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuNacionalidadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuNomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuSobrenomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id_autorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuNacionalidade {
            get {
                return this.AuNacionalidadeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuNacionalidadeField, value) != true)) {
                    this.AuNacionalidadeField = value;
                    this.RaisePropertyChanged("AuNacionalidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuNome {
            get {
                return this.AuNomeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuNomeField, value) != true)) {
                    this.AuNomeField = value;
                    this.RaisePropertyChanged("AuNome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuSobrenome {
            get {
                return this.AuSobrenomeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuSobrenomeField, value) != true)) {
                    this.AuSobrenomeField = value;
                    this.RaisePropertyChanged("AuSobrenome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_autor {
            get {
                return this.id_autorField;
            }
            set {
                if ((this.id_autorField.Equals(value) != true)) {
                    this.id_autorField = value;
                    this.RaisePropertyChanged("id_autor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CAutor.ICAutor")]
    public interface ICAutor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/Incluir", ReplyAction="http://tempuri.org/ICAutor/IncluirResponse")]
        void Incluir(BiblioLivri.View.CAutor.TBAutor oAutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/Incluir", ReplyAction="http://tempuri.org/ICAutor/IncluirResponse")]
        System.Threading.Tasks.Task IncluirAsync(BiblioLivri.View.CAutor.TBAutor oAutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/Alterar", ReplyAction="http://tempuri.org/ICAutor/AlterarResponse")]
        void Alterar(BiblioLivri.View.CAutor.TBAutor oAutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/Alterar", ReplyAction="http://tempuri.org/ICAutor/AlterarResponse")]
        System.Threading.Tasks.Task AlterarAsync(BiblioLivri.View.CAutor.TBAutor oAutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/Excluir", ReplyAction="http://tempuri.org/ICAutor/ExcluirResponse")]
        void Excluir(BiblioLivri.View.CAutor.TBAutor oAutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/Excluir", ReplyAction="http://tempuri.org/ICAutor/ExcluirResponse")]
        System.Threading.Tasks.Task ExcluirAsync(BiblioLivri.View.CAutor.TBAutor oAutor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/SelecionaPK", ReplyAction="http://tempuri.org/ICAutor/SelecionaPKResponse")]
        BiblioLivri.View.CAutor.TBAutor SelecionaPK(int codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/SelecionaPK", ReplyAction="http://tempuri.org/ICAutor/SelecionaPKResponse")]
        System.Threading.Tasks.Task<BiblioLivri.View.CAutor.TBAutor> SelecionaPKAsync(int codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/SelecionaTodos", ReplyAction="http://tempuri.org/ICAutor/SelecionaTodosResponse")]
        BiblioLivri.View.CAutor.TBAutor[] SelecionaTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICAutor/SelecionaTodos", ReplyAction="http://tempuri.org/ICAutor/SelecionaTodosResponse")]
        System.Threading.Tasks.Task<BiblioLivri.View.CAutor.TBAutor[]> SelecionaTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICAutorChannel : BiblioLivri.View.CAutor.ICAutor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAutorClient : System.ServiceModel.ClientBase<BiblioLivri.View.CAutor.ICAutor>, BiblioLivri.View.CAutor.ICAutor {
        
        public CAutorClient() {
        }
        
        public CAutorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CAutorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CAutorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CAutorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Incluir(BiblioLivri.View.CAutor.TBAutor oAutor) {
            base.Channel.Incluir(oAutor);
        }
        
        public System.Threading.Tasks.Task IncluirAsync(BiblioLivri.View.CAutor.TBAutor oAutor) {
            return base.Channel.IncluirAsync(oAutor);
        }
        
        public void Alterar(BiblioLivri.View.CAutor.TBAutor oAutor) {
            base.Channel.Alterar(oAutor);
        }
        
        public System.Threading.Tasks.Task AlterarAsync(BiblioLivri.View.CAutor.TBAutor oAutor) {
            return base.Channel.AlterarAsync(oAutor);
        }
        
        public void Excluir(BiblioLivri.View.CAutor.TBAutor oAutor) {
            base.Channel.Excluir(oAutor);
        }
        
        public System.Threading.Tasks.Task ExcluirAsync(BiblioLivri.View.CAutor.TBAutor oAutor) {
            return base.Channel.ExcluirAsync(oAutor);
        }
        
        public BiblioLivri.View.CAutor.TBAutor SelecionaPK(int codigo) {
            return base.Channel.SelecionaPK(codigo);
        }
        
        public System.Threading.Tasks.Task<BiblioLivri.View.CAutor.TBAutor> SelecionaPKAsync(int codigo) {
            return base.Channel.SelecionaPKAsync(codigo);
        }
        
        public BiblioLivri.View.CAutor.TBAutor[] SelecionaTodos() {
            return base.Channel.SelecionaTodos();
        }
        
        public System.Threading.Tasks.Task<BiblioLivri.View.CAutor.TBAutor[]> SelecionaTodosAsync() {
            return base.Channel.SelecionaTodosAsync();
        }
    }
}
